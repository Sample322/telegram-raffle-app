version: "3.8"

services:
  # ----------------- 1. Frontend (получит домен *.twc1.net) -----------------
  raffle-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile        # уже есть в репозитории
    command: ["nginx", "-g", "daemon off;"]  # nginx остаётся в foreground
    expose:
      - "80"                        # прокси Apps будет проксировать этот порт
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_WS_URL=${REACT_APP_WS_URL}
      - REACT_APP_TELEGRAM_BOT_USERNAME=${REACT_APP_TELEGRAM_BOT_USERNAME}
    depends_on:
      - raffle-api
    restart: always

  # ----------------- 2. Backend API ----------------------------------------
  raffle-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8000"                      # внутренний порт FastAPI
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_IDS=${ADMIN_IDS}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - TIMEZONE_OFFSET=${TIMEZONE_OFFSET}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - ENVIRONMENT=${ENVIRONMENT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  # ----------------- 3. Telegram Bot (background worker) -------------------
  raffle-bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - API_URL=http://raffle-api:8000        # обращается по внутреннему DNS
      - ADMIN_IDS=${ADMIN_IDS}
    depends_on:
      - raffle-api
    restart: always
