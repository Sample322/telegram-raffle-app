{"ast":null,"code":"/**\r\n * Форматирование даты в московское время\r\n */export const formatToMoscowTime=dateString=>{const date=new Date(dateString);// Опции для форматирования в московской тайм-зоне\nconst options={timeZone:'Europe/Moscow',year:'numeric',month:'long',day:'numeric',hour:'2-digit',minute:'2-digit'};return new Intl.DateTimeFormat('ru-RU',options).format(date);};/**\r\n * Получить московское время для input datetime-local\r\n */export const getMoscowTimeForInput=function(){let date=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Date();// Конвертируем в московское время\nconst moscowTime=new Date(date.toLocaleString(\"en-US\",{timeZone:\"Europe/Moscow\"}));// Форматируем для input\nconst year=moscowTime.getFullYear();const month=String(moscowTime.getMonth()+1).padStart(2,'0');const day=String(moscowTime.getDate()).padStart(2,'0');const hours=String(moscowTime.getHours()).padStart(2,'0');const minutes=String(moscowTime.getMinutes()).padStart(2,'0');return`${year}-${month}-${day}T${hours}:${minutes}`;};/**\r\n * Проверить, что дата в будущем (по московскому времени)\r\n */export const isFutureMoscowTime=dateString=>{const inputDate=new Date(dateString);const nowMoscow=new Date(new Date().toLocaleString(\"en-US\",{timeZone:\"Europe/Moscow\"}));return inputDate>nowMoscow;};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}