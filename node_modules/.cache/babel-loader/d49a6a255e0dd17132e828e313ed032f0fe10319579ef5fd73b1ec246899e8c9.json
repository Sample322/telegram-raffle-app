{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import WebApp from'@twa-dev/sdk';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({});export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAdmin,setIsAdmin]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{initializeAuth();},[]);const initializeAuth=async()=>{try{var _WebApp$initDataUnsaf;// Get user data from Telegram WebApp\nconst telegramUser=(_WebApp$initDataUnsaf=WebApp.initDataUnsafe)===null||_WebApp$initDataUnsaf===void 0?void 0:_WebApp$initDataUnsaf.user;if(telegramUser){setUser({id:telegramUser.id,username:telegramUser.username,firstName:telegramUser.first_name,lastName:telegramUser.last_name,photoUrl:telegramUser.photo_url});try{// Проверяем админский статус только если есть пользователь\nif(telegramUser){const response=await api.get('/admin/statistics');if(response.status===200){setIsAdmin(true);}}}catch(error){var _error$response,_error$response2;// Молча игнорируем 403/401 ошибки - это нормально для обычных пользователей\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)!==403&&((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)!==401){console.error('Admin check error:',error);}setIsAdmin(false);}}}catch(error){console.error('Auth initialization error:',error);}finally{setLoading(false);}};const value={user,isAdmin,loading,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}