version: '3.8'

services:
  # Nginx - ДОЛЖЕН БЫТЬ ПЕРВЫМ для проксирования
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
    depends_on:
      - backend
    restart: always
    # Порты 80 и 443 используются автоматически Timeweb

  # Backend API
  backend:
    build: ./backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_IDS=${ADMIN_IDS}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - TIMEZONE_OFFSET=${TIMEZONE_OFFSET}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - ENVIRONMENT=${ENVIRONMENT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    volumes:
      - ./uploads:/app/uploads
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Telegram Bot
  bot:
    build: ./bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - API_URL=${API_URL}
      - ADMIN_IDS=${ADMIN_IDS}
    restart: always
    depends_on:
      - backend

  # Frontend builder
  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile.builder
    volumes:
      - frontend_build:/app/build
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_WS_URL=${REACT_APP_WS_URL}
      - REACT_APP_TELEGRAM_BOT_USERNAME=${REACT_APP_TELEGRAM_BOT_USERNAME}

volumes:
  frontend_build: